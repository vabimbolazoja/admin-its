{"version":3,"sources":["views/waiting-lists/waiting-list.jsx","config.js"],"names":["Users","useHistory","useState","usersData","setUserData","totalItems","setTotalItems","page","setPage","useEffect","getUsers","getPaged","queryString","axios","get","config","baseUrl","headers","Authorization","sessionStorage","getItem","then","res","status","data","totalPages","records","catch","err","items","fields","key","name","className","current","total","defaultPageSize","onChange","pageSize","console","log","showTotal","range","process"],"mappings":"uQA2GeA,UA3FD,WACIC,cAAhB,IACA,EAAkCC,mBAAS,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAqCF,mBAAS,IAA9C,mBAAOG,EAAP,KAAmBC,EAAnB,KACA,EAAwBJ,mBAAS,GAAjC,mBAAOK,EAAP,KAAaC,EAAb,KAYAC,qBAAU,WACRC,MACC,IACH,IAAMC,EAAW,SAAAC,GACfC,IAAMC,IAAN,UAAaC,IAAOC,QAApB,uCAA0DJ,GAAe,CACvEK,QAAS,CACPC,cAAc,UAAD,OAAYC,eAAeC,QAAQ,aAGnDC,MAAK,SAAAC,GACe,MAAfA,EAAIC,SACNjB,EAAoC,GAAtBgB,EAAIE,KAAKC,YACvBrB,EAAYkB,EAAIE,KAAKE,aAIxBC,OAAM,SAAAC,QAKHlB,EAAW,WACfG,IAAMC,IAAN,UAAaC,IAAOC,QAApB,4GAAuI,CACrIC,QAAS,CACPC,cAAc,UAAD,OAAYC,eAAeC,QAAQ,aAGnDC,MAAK,SAAAC,GACe,MAAfA,EAAIC,QACNnB,EAAYkB,EAAIE,KAAKE,YAIxBC,OAAM,SAAAC,QAMT,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,4BAGA,eAAC,IAAD,WACA,cAAC,IAAD,CACEC,MAAO1B,EACP2B,OAAQ,CACN,CAAEC,IAAK,WAAWC,KAAM,aACxB,CAAED,IAAK,eAAeC,KAAM,iBAC5B,CAAED,IAAK,cAAcC,KAAM,gBAC3B,CAAED,IAAK,mBAAmBC,KAAM,gBAKlC,qBAAKC,UAAU,8BAAf,SACJ,cAAC,IAAD,CACEC,QAAS3B,EACT4B,MAAO9B,EACP+B,gBAAiB,GACjBC,SAvEW,SAAC9B,EAAM+B,GACxBC,QAAQC,IAAIjC,GACZC,EAAQD,GAERI,EADiB,iFAqEX8B,UAAW,SAACN,EAAOO,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,eAAgDP,EAAhD,2B,iCChGN,KACXnB,QAAS2B,6BAEbJ,QAAQC,IAAIG","file":"static/js/32.1936bbdb.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CPagination\n} from '@coreui/react'\nimport config from \"../../config\"\nimport axios from 'axios'\nimport { Pagination } from 'antd'\n\nconst Users = () => {\n  const history = useHistory()\n  const [usersData, setUserData] =  useState([])\n  const [totalItems, setTotalItems] =  useState(\"\")\n  const [page, setPage] = useState(1)\n\n\n\n  const pagination = (page, pageSize) => {\n    console.log(page)\n    setPage(page)\n    const queryString = `pageNumber=1&pageSize=10&fullName&emailAddress&phoneNumber&startDate&endDate`\n    getPaged(queryString)\n  }\n\n\n  useEffect(() => {\n    getUsers()\n  }, [])\n  const getPaged = queryString => {\n    axios.get(`${config.baseUrl}/api/v1/admin/wait-list/all?${queryString}`, {\n      headers: {\n        Authorization: `Bearer ${sessionStorage.getItem('token')}`\n      }\n    })\n    .then(res => {\n      if (res.status === 200) {\n        setTotalItems(res.data.totalPages * 10)\n        setUserData(res.data.records)\n\n      }\n    })\n    .catch(err => {\n      if (err) {\n      }\n    })\n}\n  const getUsers = () => {\n    axios.get(`${config.baseUrl}/api/v1/admin/wait-list/all?pageNumber=1&pageSize=10&fullName&emailAddress&phoneNumber&startDate&endDate`, {\n      headers: {\n        Authorization: `Bearer ${sessionStorage.getItem('token')}`\n      }\n    })\n    .then(res => {\n      if (res.status === 200) {\n        setUserData(res.data.records)\n        \n      }\n    })\n    .catch(err => {\n      if (err) {\n      }\n    })\n  }\n\n  return (\n    <CRow>\n      <CCol>\n        <CCard>\n          <CCardHeader>\n            Waiting Lists\n          </CCardHeader>\n          <CCardBody>\n          <CDataTable\n            items={usersData}\n            fields={[\n              { key: 'fullName',name: \"Full Name\",   },\n              { key: 'emailAddress',name: \"Email Address\",  },\n              { key: 'phoneNumber',name: \"Phone Number\",  },\n              { key: 'hasBeenContacted',name: \"Contacted\",  },\n            ]}\n        \n          \n          />\n            <div className='text-center pagination-part'>\n        <Pagination\n          current={page}\n          total={totalItems}\n          defaultPageSize={10}\n          onChange={pagination}\n          showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\n\n        />\n      </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  )\n}\n\nexport default Users\n","export default {\n    baseUrl: process.env.REACT_APP_API_END_POINT\n};\nconsole.log(process.env.REACT_APP_API_END_POINT)"],"sourceRoot":""}