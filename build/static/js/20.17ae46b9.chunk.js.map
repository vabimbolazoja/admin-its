{"version":3,"sources":["views/asks/asks.jsx","config.js"],"names":["getBadge","status","Users","useState","usersData","setUserData","page","setPage","totalItems","setTotalItems","setAskStatusData","useEffect","getAsks","axios","get","config","baseUrl","headers","Authorization","sessionStorage","getItem","then","res","data","catch","err","totalPages","records","map","reference","haveAmount","haveCurrency","Intl","NumberFormat","format","needAmount","needCurrency","rate","fraction","acceptedBidAmount","percentageFulfilled","fractionToggle","askStatus","className","custom","name","id","value","selected","items","fields","key","scopedSlots","item","color","current","total","defaultPageSize","onChange","pageSize","console","log","queryString","getPaged","showTotal","range","process"],"mappings":"+PAmBMA,EAAW,SAAAC,GACf,OAAQA,GACN,IAAK,YACH,MAAO,UACT,IAAK,mBACH,MAAO,YACT,IAAK,YACH,MAAO,SACT,QACE,MAAO,YA0LEC,UArLD,WACZ,MAAiCC,mBAAU,IAA3C,mBAAOC,EAAP,KAAkBC,EAAlB,KACA,EAAwBF,mBAAU,GAAlC,mBAAOG,EAAP,KAAaC,EAAb,KACA,EAAoCJ,mBAAU,IAA9C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA0CN,mBAAU,IAApD,mBAAsBO,GAAtB,WA8DAC,qBAAW,WACTC,IAjBAC,IACCC,IADD,UACQC,IAAOC,QADf,wBAC8C,CAC1CC,QAAS,CACLC,cAAc,UAAD,OAAYC,eAAeC,QAAQ,aAGvDC,MAAK,SAAAC,GACEA,EAAIC,MACJb,EAAiBY,EAAIC,SAG5BC,OAAM,SAAAC,SAQN,IAEH,IAOMb,EAAU,WACdC,IACGC,IADH,UAEOC,IAAOC,QAFd,6JAGI,CACEC,QAAS,CACPC,cAAc,UAAD,OAAYC,eAAeC,QAAS,aAItDC,MAAM,SAAAC,GACc,MAAfA,EAAIrB,SACNQ,EAAqC,GAAtBa,EAAIC,KAAKG,YACxBrB,EACEiB,EAAIC,KAAKI,QAAQC,KAAK,SAAAL,GAAI,MAAK,CAC7BM,UAAWN,EAAKM,UAEhBC,WAAkC,QAAtBP,EAAKQ,aACb,IAAMC,KAAKC,aAAc,SAASC,OAAQX,EAAKO,YAC/C,IAAME,KAAKC,aAAc,SAASC,OAAQX,EAAKO,YAEnDK,WAAkC,QAAtBZ,EAAKa,aACb,IAAMJ,KAAKC,aAAc,SAASC,OAAQX,EAAKY,YAC/C,IAAMH,KAAKC,aAAc,SAASC,OAAQX,EAAKY,YAEnDE,KAAMd,EAAKc,KACXC,SAAUf,EAAKe,SAAW,MAAQ,KAClCC,kBAAmBhB,EAAKgB,kBACxBC,oBAAqBjB,EAAKiB,oBAC1BC,eAAgBlB,EAAKkB,eAAiB,MAAQ,KAC9CC,UAAWnB,EAAKmB,mBAKvBlB,OAAO,SAAAC,QAMZ,OACE,cAAC,IAAD,UACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,cAAC,IAAD,UACE,sBAAKkB,UAAU,oDAAf,iBAEE,cAAC,IAAD,UACE,eAAC,IAAD,CAASC,QAAM,EAACC,KAAK,UAAUC,GAAG,UAAlC,UACE,wBAAQC,MAAM,IAAIC,UAAQ,EAA1B,oBACA,wBAAQD,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,yBAOR,eAAC,IAAD,WACE,cAAC,IAAD,CACEE,MAAO7C,EACP8C,OAAQ,CACN,CAACC,IAAK,YAAaN,KAAM,WACzB,CAACM,IAAK,aAAcN,KAAM,eAC1B,CAACM,IAAK,aAAcN,KAAM,eAC1B,CAACM,IAAK,OAAQN,KAAM,iBACpB,CAACM,IAAK,WAAYN,KAAM,WACxB,CAACM,IAAK,oBAAqBN,KAAM,gBACjC,CACEM,IAAK,sBACLN,KAAM,gCAER,CAACM,IAAK,iBAAkBN,KAAM,mBAC9B,CAACM,IAAK,YAAaN,KAAM,eAE3BO,YAAa,CACXV,UAAW,SAAAW,GAAI,OACb,6BACE,cAAC,IAAD,CAAQC,MAAOtD,EAAUqD,EAAKX,WAA9B,SACGW,EAAKX,kBAMhB,qBAAKC,UAAU,8BAAf,SACE,cAAC,IAAD,CACEY,QAASjD,EACTkD,MAAOhD,EACPiD,gBAAiB,GACjBC,SAnGK,SAACpD,EAAMqD,GACxBC,QAAQC,IAAKvD,GACbC,EAASD,GA9DM,SAAAwD,GACfjD,IACGC,IADH,UACWC,IAAOC,QADlB,kCACmD8C,GAAe,CAC9D7C,QAAS,CACPC,cAAc,UAAD,OAAYC,eAAeC,QAAS,aAGpDC,MAAM,SAAAC,GACc,MAAfA,EAAIrB,SACNQ,EAAqC,GAAtBa,EAAIC,KAAKG,YACxBrB,EACEiB,EAAIC,KAAKI,QAAQC,KAAK,SAAAL,GAAI,MAAK,CAC7BM,UAAWN,EAAKM,UAEhBC,WAAkC,QAAtBP,EAAKQ,aACb,IAAMC,KAAKC,aAAc,SAASC,OAAQX,EAAKO,YAC/C,IAAME,KAAKC,aAAc,SAASC,OAAQX,EAAKO,YAEnDK,WAAkC,QAAtBZ,EAAKa,aACb,IAAMJ,KAAKC,aAAc,SAASC,OAAQX,EAAKY,YAC/C,IAAMH,KAAKC,aAAc,SAASC,OAAQX,EAAKY,YAEnDE,KAAMd,EAAKc,KACXC,SAAUf,EAAKe,SAAW,MAAQ,KAClCC,kBAAmBhB,EAAKgB,kBACxBC,oBAAqBjB,EAAKiB,oBAC1BC,eAAgBlB,EAAKkB,eAAiB,MAAQ,KAC9CC,UAAWnB,EAAKmB,mBAKvBlB,OAAO,SAAAC,OAgCVsC,CADiB,qBAAiBzD,EAAjB,4HAiGL0D,UAAW,SAACR,EAAOS,GAAR,gBAAqBA,EAAM,GAA3B,YAAiCA,EAAM,GAAvC,eAAgDT,EAAhD,2B,iCC5MZ,KACXxC,QAASkD,6BAEbN,QAAQC,IAAIK","file":"static/js/20.17ae46b9.chunk.js","sourcesContent":["import React, {useState, useEffect} from 'react';\nimport {useHistory, useLocation} from 'react-router-dom';\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CDataTable,\n  CRow,\n  CFormGroup,\n  CSelect,\n  CLabel,\n  CPagination,\n} from '@coreui/react';\nimport config from '../../config';\nimport axios from 'axios';\nimport {Pagination} from 'antd';\n\nconst getBadge = status => {\n  switch (status) {\n    case 'FULFILLED':\n      return 'success';\n    case 'PARTLY_FULFILLED':\n      return 'secondary';\n    case 'CANCELLED':\n      return 'danger';\n    default:\n      return 'primary';\n  }\n};\n\n\nconst Users = () => {\n  const [usersData, setUserData] = useState ([]);\n  const [page, setPage] = useState (1);\n  const [totalItems, setTotalItems] = useState ('');\n  const [askStatusData, setAskStatusData] = useState ({});\n\n\n\n\n\n\n  const getPaged = queryString => {\n    axios\n      .get (`${config.baseUrl}/api/v1/admin/asks/all?${queryString}`, {\n        headers: {\n          Authorization: `Bearer ${sessionStorage.getItem ('token')}`,\n        },\n      })\n      .then (res => {\n        if (res.status === 200) {\n          setTotalItems (res.data.totalPages * 10);\n          setUserData (\n            res.data.records.map (data => ({\n              reference: data.reference,\n\n              haveAmount: data.haveCurrency === 'NGN'\n                ? 'N' + Intl.NumberFormat ('en-US').format (data.haveAmount)\n                : '$' + Intl.NumberFormat ('en-US').format (data.haveAmount),\n\n              needAmount: data.needCurrency === 'NGN'\n                ? 'N' + Intl.NumberFormat ('en-US').format (data.needAmount)\n                : '$' + Intl.NumberFormat ('en-US').format (data.needAmount),\n\n              rate: data.rate,\n              fraction: data.fraction ? \"YES\" : \"NO\",\n              acceptedBidAmount: data.acceptedBidAmount,\n              percentageFulfilled: data.percentageFulfilled,\n              fractionToggle: data.fractionToggle ? \"YES\" : \"NO\",\n              askStatus: data.askStatus,\n            }))\n          );\n        }\n      })\n      .catch (err => {\n        if (err) {\n        }\n      });\n  };\n\n  const getAskStatus = () => {\n    axios\n    .get(`${config.baseUrl}/api/v1/ask/statuses`, {\n        headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('token')}`\n        }\n    })\n    .then(res => {\n        if (res.data) {\n            setAskStatusData(res.data)\n        }\n    })\n    .catch(err => {\n        if (err) {}\n    })\n  }\n\n  useEffect (() => {\n    getAsks ();\n    getAskStatus()\n  }, []);\n\n  const pagination = (page, pageSize) => {\n    console.log (page);\n    setPage (page);\n    const queryString = `pageNumber=${page}&pageSize=10&haveCurrency&haveAmount&needCurrency&needAmount&rate&askStatus&emailAddress&phoneNumber&startDate&endDate`;\n    getPaged (queryString);\n  };\n\n  const getAsks = () => {\n    axios\n      .get (\n        `${config.baseUrl}/api/v1/admin/asks/all?pageNumber=1&pageSize=10&haveCurrency&haveAmount&needCurrency&needAmount&rate&askStatus&emailAddress&phoneNumber&startDate&endDate`,\n        {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem ('token')}`,\n          },\n        }\n      )\n      .then (res => {\n        if (res.status === 200) {\n          setTotalItems (res.data.totalPages * 10);\n          setUserData (\n            res.data.records.map (data => ({\n              reference: data.reference,\n\n              haveAmount: data.haveCurrency === 'NGN'\n                ? 'N' + Intl.NumberFormat ('en-US').format (data.haveAmount)\n                : '$' + Intl.NumberFormat ('en-US').format (data.haveAmount),\n\n              needAmount: data.needCurrency === 'NGN'\n                ? 'N' + Intl.NumberFormat ('en-US').format (data.needAmount)\n                : '$' + Intl.NumberFormat ('en-US').format (data.needAmount),\n\n              rate: data.rate,\n              fraction: data.fraction ? \"YES\" : \"NO\",\n              acceptedBidAmount: data.acceptedBidAmount,\n              percentageFulfilled: data.percentageFulfilled,\n              fractionToggle: data.fractionToggle ? \"YES\" : \"NO\",\n              askStatus: data.askStatus,\n            }))\n          );\n        }\n      })\n      .catch (err => {\n        if (err) {\n        }\n      });\n  };\n\n  return (\n    <CRow>\n      <CCol>\n        <CCard>\n          <CCardHeader>\n            <div className=\"d-flex justify-content-between align-items-center\">\n              Asks\n              <CFormGroup>\n                <CSelect custom name=\"ccmonth\" id=\"ccmonth\">\n                  <option value=\"1\" selected>Select</option>\n                  <option value=\"2\">2</option>\n                  <option value=\"3\">3</option>\n                  <option value=\"4\">4</option>\n\n                </CSelect>\n              </CFormGroup>\n            </div>\n\n          </CCardHeader>\n          <CCardBody>\n            <CDataTable\n              items={usersData}\n              fields={[\n                {key: 'reference', name: 'Ask Ref'},\n                {key: 'haveAmount', name: 'Have Amount'},\n                {key: 'needAmount', name: 'Need Amount'},\n                {key: 'rate', name: 'Email Address'},\n                {key: 'fraction', name: 'Country'},\n                {key: 'acceptedBidAmount', name: 'Account Type'},\n                {\n                  key: 'percentageFulfilled',\n                  name: 'Identity Verification Status',\n                },\n                {key: 'fractionToggle', name: 'Fraction Toggle'},\n                {key: 'askStatus', name: 'Ask Status'},\n              ]}\n              scopedSlots={{\n                askStatus: item => (\n                  <td>\n                    <CBadge color={getBadge (item.askStatus)}>\n                      {item.askStatus}\n                    </CBadge>\n                  </td>\n                ),\n              }}\n            />\n            <div className=\"text-center pagination-part\">\n              <Pagination\n                current={page}\n                total={totalItems}\n                defaultPageSize={10}\n                onChange={pagination}\n                showTotal={(total, range) => `${range[0]}-${range[1]} of ${total} items`}\n              />\n            </div>\n          </CCardBody>\n        </CCard>\n      </CCol>\n    </CRow>\n  );\n};\n\nexport default Users;\n","export default {\n    baseUrl: process.env.REACT_APP_API_END_POINT\n};\nconsole.log(process.env.REACT_APP_API_END_POINT)"],"sourceRoot":""}