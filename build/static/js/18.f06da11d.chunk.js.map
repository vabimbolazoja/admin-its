{"version":3,"sources":["views/Messages/messages.jsx","config.js"],"names":["Users","useHistory","queryPage","useLocation","search","match","currentPage","Number","useState","page","setPage","limitData","setLimitData","createSettlement","setCreate","success","setSuccess","deleteSuccess","deleteErr","setDelErr","error","setError","msg","setMsg","load","setLoad","messageBody","setMessageBody","updateState","setUpdateState","useEffect","getLimitProfileSettlemts","axios","get","config","baseUrl","headers","Authorization","sessionStorage","getItem","then","res","data","console","log","map","createdOn","slice","message","id","catch","err","confirmDelete","e","preventDefault","Modal","confirm","title","icon","okText","okType","cancelText","onOk","delete","status","setTimeout","undefined","response","deleteFunc","onCancel","color","className","type","class","onClick","items","fields","key","name","hover","striped","itemsPerPage","activePage","scopedSlots","Actions","item","bind","clickableRows","visible","footer","maskClosable","htmlFor","required","onChange","target","value","post","role","style","width","height","process"],"mappings":"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","file":"static/js/18.f06da11d.chunk.js","sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useHistory, useLocation } from 'react-router-dom'\nimport { ExclamationCircleOutlined } from '@ant-design/icons'\nimport {\n  CBadge,\n  CCard,\n  CCardBody,\n  CCardHeader,\n  CCol,\n  CInput,\n  CLabel,\n  CFormGroup,\n  CDataTable,\n  CRow,\n  CSelect,\n  CButton,\n  CAlert,\n  CPagination\n} from '@coreui/react'\nimport config from '../../config'\nimport axios from 'axios'\nimport { message, Modal } from 'antd'\nconst Users = () => {\n  const history = useHistory()\n  const queryPage = useLocation().search.match(/page=([0-9]+)/, '')\n  const currentPage = Number(queryPage && queryPage[1] ? queryPage[1] : 1)\n  const [page, setPage] = useState(currentPage)\n  const [limitData, setLimitData] = useState([])\n  const [createSettlement, setCreate] = useState(false)\n\n  const [success, setSuccess] = useState(false)\n  const [deleteSuccess, setDelSuccess] = useState(false)\n  const [deleteErr, setDelErr] = useState(false)\n\n  const [error, setError] = useState(false)\n  const [msg, setMsg] = useState('')\n  const [load, setLoad] = useState(false)\n  const [messageBody, setMessageBody] = useState('')\n  const [scalingThreshold, setThreshold] = useState('')\n  const [singleTransactionLimit, setSingleTransaction] = useState('')\n  const [dailyCumulativeTransactionLimit, setDailyCumulative] = useState('')\n  const [globalLimit, setGlobalLimit] = useState('')\n\n  const [updateState, setUpdateState] = useState('')\n  const [id, setID] = useState('')\n  const [configDatas, setConfigsData] = useState({})\n\n  const closeCreate = () => {\n    setCreate(false)\n   setMessageBody(\"\")\n  }\n\n\n  const addLimit = () => {\n    if (\n      messageBody\n    ) {\n      setLoad(true)\n      axios\n        .post(\n          `${config.baseUrl}/api/v1/admin/notification-preset\n      `,\n          {\n           \n            message: messageBody\n          },\n          {\n            headers: {\n              Authorization: `Bearer ${sessionStorage.getItem('token')}`\n            }\n          }\n        )\n        .then(res => {\n          setLoad(false)\n          if (res.status === 201) {\n            setSuccess(true)\n            setMessageBody('')\n            getLimitProfileSettlemts()\n           \n            setMsg('Message Created Successfully')\n            setTimeout(() => {\n              setMsg('')\n              setCreate(false)\n              setSuccess(false)\n            }, 2500)\n          }\n        })\n        .catch(err => {\n          setLoad(false)\n          if (err.response !== undefined) {\n            setMsg(err.response.data.message)\n            setError(true)\n            setSuccess(false)\n            setTimeout(() => {\n              setMsg('')\n              setError(false)\n            }, 2500)\n          } else {\n            setMsg('Connection Error')\n            setError(true)\n            setSuccess(false)\n          }\n        })\n    } else {\n      // setError(true)\n      // setMsg(\"All fie\")\n    }\n  }\n\n  const getLimitProfile = () => {\n    axios\n      .get(`${config.baseUrl}/api/v1/configurations`)\n      .then(res => {\n        if (res.status === 200) {\n          setConfigsData(res.data)\n        }\n      })\n      .catch(err => {\n        if (err) {\n        }\n      })\n  }\n\n//   const update = () => {\n//     setLoad(true)\n//     console.log(id)\n//     axios\n//       .put(\n//         `${config.baseUrl}/api/v1/admin/limit-profile/${id}`,\n//         {\n//           scalingThreshold: scalingThreshold,\n//           singleTransactionLimit: singleTransactionLimit,\n//           dailyCumulativeTransactionLimit: dailyCumulativeTransactionLimit,\n//           globalLimit: globalLimit\n//         },\n//         {\n//           headers: {\n//             Authorization: `Bearer ${sessionStorage.getItem('token')}`\n//           }\n//         }\n//       )\n//       .then(res => {\n//         setLoad(false)\n//         if (res.status === 200) {\n//           setSuccess(true)\n//           setSingleTransaction('')\n//           getLimitProfileSettlemts()\n//           setDailyCumulative('')\n//           setLimit('')\n//           setGlobalLimit('')\n//           setThreshold('')\n//           setMsg('Limit Profile Updated Successfully')\n//           setTimeout(() => {\n//             setMsg('')\n//             setSuccess(false)\n//             setCreate(false)\n\n//           }, 2500)\n//         }\n//       })\n//       .catch(err => {\n//         setLoad(false)\n//         if (err.response !== undefined) {\n//           setMsg(err.response.data.message)\n//           setError(true)\n//           setSuccess(false)\n//           setTimeout(() => {\n//             setMsg('')\n//             setCreate(false)\n//             setError(false)\n//           }, 2500)\n//         } else {\n//           setMsg('Connection Error')\n//           setError(true)\n//           setSuccess(false)\n//         }\n//       })\n//   }\n\n  useEffect(() => {\n    getLimitProfileSettlemts()\n    currentPage !== page && setPage(currentPage)\n  }, [currentPage, page])\n\n  const getLimitProfileSettlemts = () => {\n    axios\n      .get(\n        `${config.baseUrl}/api/v1/admin/notification-preset/all\n        `,\n        {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('token')}`\n          }\n        }\n      )\n      .then(res => {\n        if (res.data) {\n          console.log(limitData)\n          setLimitData(\n            res.data.map(data => ({\n              createdOn: data.createdOn ? data.createdOn.slice(0, 10) : '',\n             message: data.message,\n             id:data.id\n            }))\n          )\n        }\n      })\n      .catch(err => {\n        if (err) {\n        }\n      })\n  }\n\n  const deleteFunc = id => {\n    console.log(id)\n    setLoad(true)\n    axios\n      .delete(\n        `${config.baseUrl}/api/v1/admin/notification-preset/${id.id}\n      `,\n        {\n          headers: {\n            Authorization: `Bearer ${sessionStorage.getItem('token')}`\n          }\n        }\n      )\n      .then(res => {\n        setLoad(false)\n        if (res.status === 200) {\n          setDelErr(true)\n          setMsg('Message Deleted Successfully')\n          getLimitProfileSettlemts()\n          setTimeout(() => {\n            setMsg('')\n            setDelErr(false)\n          }, 2500)\n        }\n      })\n      .catch(err => {\n        setLoad(false)\n        if (err.response !== undefined) {\n          setMsg(err.response.data.message)\n          setDelErr(true)\n          setTimeout(() => {\n            setMsg('')\n            setDelErr(false)\n          }, 2500)\n        } else {\n          setMsg('Connection Error')\n          setDelErr(false)\n        }\n      })\n  }\n\n  const confirmDelete = (id, e) => {\n    e.preventDefault()\n    Modal.confirm({\n      title: `Are you sure you want to delete this notification preset ?`,\n      icon: <ExclamationCircleOutlined />,\n      okText: 'Yes',\n      okType: 'danger',\n      cancelText: 'No',\n      onOk () {\n        deleteFunc(id)\n      },\n      onCancel () {\n        console.log('Cancel')\n      }\n    })\n  }\n  const createSettlementFunc = () => {\n    setUpdateState(false)\n    setCreate(true)\n  }\n\n//   const updateFunc = id => {\n//     console.log(id)\n//     setID(id.id)\n//     setLimit(id.limitType)\n//     setSingleTransaction(id.singleTransactionLimit)\n//     setDailyCumulative(id.dailyCumulativeTransactionLimit)\n//     setThreshold(id.scalingThreshold)\n//     setGlobalLimit(id.globalLimit)\n//     setUpdateState(true)\n//     setCreate(true)\n//   }\n\n  return (\n    <>\n        <CRow>\n          <CCol>\n            {deleteSuccess && <CAlert color='success'>{msg}</CAlert>}\n\n            {deleteErr && <CAlert color='danger'>{msg}</CAlert>}\n            <CCard>\n              <CCardHeader>\n                <div className='d-flex justify-content-between align-items-center'>\n                  <div>Notification Presets</div>\n                  <button\n                    type='button'\n                    class='btn btn-primary mr-2'\n                    onClick={createSettlementFunc}\n                  >\n                    Create Message\n                  </button>\n                </div>\n              </CCardHeader>\n              <CCardBody>\n                <CDataTable\n                  items={limitData}\n                  fields={[\n                    { key: 'createdOn', name: 'Created On' },\n                    { key: 'message', name: 'Message' },\n                 \n\n                    {\n                      key: 'Actions',\n                      name: 'Actions'\n                    }\n                  ]}\n                  hover\n                  striped\n                  itemsPerPage={5}\n                  activePage={page}\n                  scopedSlots={{\n                    Actions: item => (\n                      <td className='d-flex'>\n                        {/* <button\n                          type='button'\n                          class='btn btn-success mr-2'\n                          onClick={updateFunc.bind(this, item)}\n                        >\n                          Update\n                        </button> */}\n                        <button\n                          type='button'\n                          class='btn btn-danger'\n                          onClick={confirmDelete.bind(this, item)}\n                        >\n                          Delete\n                        </button>\n                      </td>\n                    )\n                  }}\n                  clickableRows\n                />\n                {/* <CPagination\n                  activePage={page}\n                  onActivePageChange={pageChange}\n                  pages={5}\n                  doubleArrows={false}\n                  align='center'\n                /> */}\n              </CCardBody>\n            </CCard>\n          </CCol>\n\n          <Modal\n            title={\n              updateState ? 'Update Limit Profile' : 'Create Message'\n            }\n            visible={createSettlement}\n            footer={null}\n            maskClosable={false}\n            onCancel={closeCreate}\n          >\n            <div className='container'>\n              <form>\n                {success && <CAlert color='success'>{msg}</CAlert>}\n\n                {error && <CAlert color='danger'>{msg}</CAlert>}\n                {!updateState ? (\n                  <>\n                    <CFormGroup>\n                      <CLabel htmlFor='name'>Message</CLabel>\n                      <CInput\n                        id='name'\n                        type='text'\n                        required\n                        onChange={e => setMessageBody(e.target.value)}\n                        value={messageBody}\n                      />\n                    </CFormGroup>\n                 \n                  </>\n                ) : (\n                  <>\n                    \n                  </>\n                )}\n                <br />\n                <div className='d-flex justify-content-end'>\n                  <button\n                    type='button'\n                    class='btn btn-primary mr-2'\n                    onClick={addLimit}\n                  >\n                     {load ? (\n                            <div\n                              class='spinner-border'\n                              role='status'\n                              style={{ width: '1rem', height: '1rem' }}\n                            >\n                              <span class='sr-only'>Loading...</span>\n                            </div>\n                          ) : (\n                            'Submit'\n                          )}\n                  </button>\n                </div>\n              </form>\n            </div>\n          </Modal>\n        </CRow>\n    \n    </>\n  )\n}\n\nexport default Users\n","export default {\n    baseUrl: process.env.REACT_APP_API_END_POINT\n};\nconsole.log(process.env.REACT_APP_API_END_POINT)"],"sourceRoot":""}